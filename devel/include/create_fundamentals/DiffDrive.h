// Generated by gencpp from file create_fundamentals/DiffDrive.msg
// DO NOT EDIT!


#ifndef CREATE_FUNDAMENTALS_MESSAGE_DIFFDRIVE_H
#define CREATE_FUNDAMENTALS_MESSAGE_DIFFDRIVE_H

#include <ros/service_traits.h>


#include <create_fundamentals/DiffDriveRequest.h>
#include <create_fundamentals/DiffDriveResponse.h>


namespace create_fundamentals
{

struct DiffDrive
{

typedef DiffDriveRequest Request;
typedef DiffDriveResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct DiffDrive
} // namespace create_fundamentals


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::create_fundamentals::DiffDrive > {
  static const char* value()
  {
    return "7c56fde7f27c872d8a97d66ee4b33e33";
  }

  static const char* value(const ::create_fundamentals::DiffDrive&) { return value(); }
};

template<>
struct DataType< ::create_fundamentals::DiffDrive > {
  static const char* value()
  {
    return "create_fundamentals/DiffDrive";
  }

  static const char* value(const ::create_fundamentals::DiffDrive&) { return value(); }
};


// service_traits::MD5Sum< ::create_fundamentals::DiffDriveRequest> should match
// service_traits::MD5Sum< ::create_fundamentals::DiffDrive >
template<>
struct MD5Sum< ::create_fundamentals::DiffDriveRequest>
{
  static const char* value()
  {
    return MD5Sum< ::create_fundamentals::DiffDrive >::value();
  }
  static const char* value(const ::create_fundamentals::DiffDriveRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::create_fundamentals::DiffDriveRequest> should match
// service_traits::DataType< ::create_fundamentals::DiffDrive >
template<>
struct DataType< ::create_fundamentals::DiffDriveRequest>
{
  static const char* value()
  {
    return DataType< ::create_fundamentals::DiffDrive >::value();
  }
  static const char* value(const ::create_fundamentals::DiffDriveRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::create_fundamentals::DiffDriveResponse> should match
// service_traits::MD5Sum< ::create_fundamentals::DiffDrive >
template<>
struct MD5Sum< ::create_fundamentals::DiffDriveResponse>
{
  static const char* value()
  {
    return MD5Sum< ::create_fundamentals::DiffDrive >::value();
  }
  static const char* value(const ::create_fundamentals::DiffDriveResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::create_fundamentals::DiffDriveResponse> should match
// service_traits::DataType< ::create_fundamentals::DiffDrive >
template<>
struct DataType< ::create_fundamentals::DiffDriveResponse>
{
  static const char* value()
  {
    return DataType< ::create_fundamentals::DiffDrive >::value();
  }
  static const char* value(const ::create_fundamentals::DiffDriveResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CREATE_FUNDAMENTALS_MESSAGE_DIFFDRIVE_H
